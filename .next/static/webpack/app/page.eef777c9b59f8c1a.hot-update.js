"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/movie.service.ts":
/*!**********************************!*\
  !*** ./src/app/movie.service.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCredits: function() { return /* binding */ getCredits; },\n/* harmony export */   getMovieDetails: function() { return /* binding */ getMovieDetails; },\n/* harmony export */   getTrailer: function() { return /* binding */ getTrailer; },\n/* harmony export */   getTrendingMovies: function() { return /* binding */ getTrendingMovies; }\n/* harmony export */ });\nconst API_KEY = \"77f3cadb497722d6b57cf23f4e4c2032\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst getTrendingMovies = async ()=>{\n    try {\n        const res = await fetch(\"\".concat(BASE_URL, \"/trending/movie/day?language=en-US&api_key=\").concat(API_KEY));\n        const data = await res.json();\n        return data.results;\n    } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n        return [];\n    }\n};\nconst getMovieDetails = async (id)=>{\n    const res = await fetch(\"\".concat(BASE_URL, \"/movie/\").concat(id, \"?api_key=\").concat(API_KEY));\n    const data = await res.json();\n    return data;\n};\nconst getTrailer = async (id)=>{\n    const res = await fetch(\"\".concat(BASE_URL, \"/movie/\").concat(id, \"/videos?api_key=\").concat(API_KEY));\n    const data = await res.json();\n    return data;\n};\nconst getCredits = async (id)=>{\n    const res = await fetch(\"\".concat(BASE_URL, \"/movie/\").concat(id, \"/credits\"));\n    const data = await res.json();\n    return data;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbW92aWUuc2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsVUFBVTtBQUVoQixNQUFNQyxXQUFXO0FBRVYsTUFBTUMsb0JBQW9CO0lBQy9CLElBQUk7UUFDRixNQUFNQyxNQUFNLE1BQU1DLE1BQ2hCLEdBQXlESixPQUF0REMsVUFBUywrQ0FBcUQsT0FBUkQ7UUFFM0QsTUFBTUssT0FBTyxNQUFNRixJQUFJRyxJQUFJO1FBRTNCLE9BQU9ELEtBQUtFLE9BQU87SUFDckIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU8sRUFBRTtJQUNYO0FBQ0YsRUFBRTtBQUVLLE1BQU1FLGtCQUFrQixPQUFPQztJQUNwQyxNQUFNUixNQUFNLE1BQU1DLE1BQU0sR0FBcUJPLE9BQWxCVixVQUFTLFdBQXVCRCxPQUFkVyxJQUFHLGFBQW1CLE9BQVJYO0lBQzNELE1BQU1LLE9BQU8sTUFBTUYsSUFBSUcsSUFBSTtJQUMzQixPQUFPRDtBQUNULEVBQUU7QUFFSyxNQUFNTyxhQUFhLE9BQU9EO0lBQy9CLE1BQU1SLE1BQU0sTUFBTUMsTUFBTSxHQUFxQk8sT0FBbEJWLFVBQVMsV0FBOEJELE9BQXJCVyxJQUFHLG9CQUEwQixPQUFSWDtJQUNsRSxNQUFNSyxPQUFPLE1BQU1GLElBQUlHLElBQUk7SUFDM0IsT0FBT0Q7QUFDVCxFQUFFO0FBRUssTUFBTVEsYUFBYSxPQUFPRjtJQUMvQixNQUFNUixNQUFNLE1BQU1DLE1BQU0sR0FBcUJPLE9BQWxCVixVQUFTLFdBQVksT0FBSFUsSUFBRztJQUNoRCxNQUFNTixPQUFPLE1BQU1GLElBQUlHLElBQUk7SUFDM0IsT0FBT0Q7QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvbW92aWUuc2VydmljZS50cz82MDdlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFQSV9LRVkgPSBcIjc3ZjNjYWRiNDk3NzIyZDZiNTdjZjIzZjRlNGMyMDMyXCI7XG5cbmNvbnN0IEJBU0VfVVJMID0gXCJodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zXCI7XG5cbmV4cG9ydCBjb25zdCBnZXRUcmVuZGluZ01vdmllcyA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgIGAke0JBU0VfVVJMfS90cmVuZGluZy9tb3ZpZS9kYXk/bGFuZ3VhZ2U9ZW4tVVMmYXBpX2tleT0ke0FQSV9LRVl9YFxuICAgICk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgICByZXR1cm4gZGF0YS5yZXN1bHRzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB0cmVuZGluZyBtb3ZpZXM6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRNb3ZpZURldGFpbHMgPSBhc3luYyAoaWQ6IGFueSkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtCQVNFX1VSTH0vbW92aWUvJHtpZH0/YXBpX2tleT0ke0FQSV9LRVl9YCk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICByZXR1cm4gZGF0YTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRUcmFpbGVyID0gYXN5bmMgKGlkOiBhbnkpID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L21vdmllLyR7aWR9L3ZpZGVvcz9hcGlfa2V5PSR7QVBJX0tFWX1gKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIHJldHVybiBkYXRhO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENyZWRpdHMgPSBhc3luYyAoaWQ6IGFueSkgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtCQVNFX1VSTH0vbW92aWUvJHtpZH0vY3JlZGl0c2ApO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sIm5hbWVzIjpbIkFQSV9LRVkiLCJCQVNFX1VSTCIsImdldFRyZW5kaW5nTW92aWVzIiwicmVzIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsInJlc3VsdHMiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRNb3ZpZURldGFpbHMiLCJpZCIsImdldFRyYWlsZXIiLCJnZXRDcmVkaXRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/movie.service.ts\n"));

/***/ })

});